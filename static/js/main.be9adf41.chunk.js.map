{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","hoc/Auxiliary.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","auxiliary","props","children","BurgerIngredient","ingredient","this","type","className","classes","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","burger","transformedIngredient","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","label","Less","onClick","removed","disabled","disabledProperty","More","added","controls","buildControls","BuildControls","price","toFixed","cntrl","ingredientAdded","ingredientRemoved","disabledProperties","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","disabledInfo","Auxiliary","layout","Classes","Content","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be9adf41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__T9oJl\",\"BreadTop\":\"BurgerIngredient_BreadTop__3l-dE\",\"Seeds1\":\"BurgerIngredient_Seeds1__ewfD7\",\"Seeds2\":\"BurgerIngredient_Seeds2__1LQeB\",\"Meat\":\"BurgerIngredient_Meat__3twxC\",\"Cheese\":\"BurgerIngredient_Cheese__2OpzK\",\"Salad\":\"BurgerIngredient_Salad__3nwhJ\",\"Bacon\":\"BurgerIngredient_Bacon__143DS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3SZzM\",\"Label\":\"BuildControl_Label__etSHc\",\"Less\":\"BuildControl_Less__YKmVt\",\"More\":\"BuildControl_More__1iBhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WIeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2akaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__SgR4K\"};","const auxiliary = (props) => props.children;\r\n\r\nexport default auxiliary;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./BurgerIngredient.module.css\";\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={classes.Salad}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nconst burger = (props) => {\r\n  let transformedIngredient = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n  if (transformedIngredient.length === 0)\r\n    transformedIngredient = <p>Please Add Some Ingredients</p>;\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredient}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.label}>{props.label}</div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.removed}\r\n        disabled={props.disabledProperty}\r\n      >\r\n        Less\r\n      </button>\r\n      <button className={classes.More} onClick={props.added}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n  { label: \"Cheese\", type: \"cheese\" }\r\n];\r\n\r\nconst buildControls = (props) => {\r\n    return (\r\n    <div className={classes.BuildControls}>\r\n<p> Currenct Price: <strong>  {props.price.toFixed(2)}</strong></p>\r\n      {controls.map((cntrl) => (\r\n        <BuildControl\r\n          key={cntrl.label}\r\n          label={cntrl.label}\r\n          added={() => props.ingredientAdded(cntrl.type)}\r\n          removed={() => props.ingredientRemoved(cntrl.type)}\r\n          disabledProperty={props.disabledProperties[cntrl.type]}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\nimport Burger from \"./../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 0.3,\r\n  bacon: 0.7\r\n};\r\nclass BurgerBuilder extends Component {\r\n  // constructor(props){\r\n  //   super(props);\r\n  //   this.state = {...}\r\n  // }\r\n\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4\r\n  };\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n  };\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) return;\r\n\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceAddition;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = { ...this.state.ingredients };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    return (\r\n      <Auxiliary>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          disabledProperties={disabledInfo}\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          price={this.state.totalPrice}\r\n        />\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\r\nimport Classes from './Layout.module.css';\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\nimport BurgerBuilder from './../../containers/BurgerBuilder/BurgerBuilder';\r\nconst layout = (props) => (\r\n  <Auxiliary>\r\n    {/* <div>Toolbar, SideDrawer,BackDrop</div> */}\r\n    <main className={Classes.Content}>{props.children} </main>\r\n    <BurgerBuilder />\r\n  </Auxiliary>\r\n);\r\n\r\nexport default layout;","import React from \"react\";\nimport \"./App.css\";\nimport Layout from \"./components/Layout/Layout\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        {/* <p>Test</p> */}\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}